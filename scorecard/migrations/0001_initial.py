# Generated by Django 5.2.5 on 2025-10-01 16:13

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventario', '0009_empleado_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaIncidencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre de la categoría (ej: Fallo post-reparación)', max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada de esta categoría')),
                ('color', models.CharField(default='#6c757d', help_text='Color en hexadecimal para gráficos (ej: #FF5733)', max_length=7)),
                ('activo', models.BooleanField(default=True, help_text='Categoría activa para usar en nuevos registros')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Categoría de Incidencia',
                'verbose_name_plural': 'Categorías de Incidencias',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ComponenteEquipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del componente (ej: Pantalla, Teclado, RAM)', max_length=100)),
                ('tipo_equipo', models.CharField(choices=[('pc', 'PC'), ('laptop', 'Laptop'), ('aio', 'AIO (All-in-One)'), ('todos', 'Todos los tipos')], default='todos', help_text='Tipo de equipo donde aplica este componente', max_length=10)),
                ('activo', models.BooleanField(default=True, help_text='Componente activo para selección')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Componente de Equipo',
                'verbose_name_plural': 'Componentes de Equipos',
                'ordering': ['nombre'],
                'unique_together': {('nombre', 'tipo_equipo')},
            },
        ),
        migrations.CreateModel(
            name='Incidencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folio', models.CharField(editable=False, help_text='Folio auto-generado (INC-2024-0001)', max_length=20, unique=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, help_text='Fecha de registro en el sistema')),
                ('fecha_deteccion', models.DateField(default=django.utils.timezone.now, help_text='Fecha en que se detectó la incidencia')),
                ('tipo_equipo', models.CharField(choices=[('pc', 'PC'), ('laptop', 'Laptop'), ('aio', 'AIO (All-in-One)')], help_text='Tipo de equipo', max_length=10)),
                ('marca', models.CharField(help_text='Marca del equipo (HP, Dell, Lenovo, etc.)', max_length=50)),
                ('modelo', models.CharField(blank=True, help_text='Modelo específico del equipo', max_length=100)),
                ('numero_serie', models.CharField(help_text='Número de serie del equipo', max_length=100)),
                ('servicio_realizado', models.CharField(blank=True, help_text='Descripción del servicio que se realizó', max_length=200)),
                ('area_detectora', models.CharField(choices=[('tecnico', 'Área Técnica'), ('calidad', 'Control de Calidad'), ('recepcion', 'Recepción'), ('cliente', 'Cliente'), ('otra', 'Otra')], help_text='Área que detectó la incidencia', max_length=20)),
                ('categoria_fallo', models.CharField(choices=[('hardware', 'Hardware'), ('software', 'Software'), ('cosmetico', 'Cosmético'), ('funcional', 'Funcional'), ('documentacion', 'Documentación'), ('otro', 'Otro')], help_text='Categoría general del fallo', max_length=20)),
                ('grado_severidad', models.CharField(choices=[('critico', 'Crítico'), ('alto', 'Alto'), ('medio', 'Medio'), ('bajo', 'Bajo')], default='medio', help_text='Nivel de severidad de la incidencia', max_length=10)),
                ('descripcion_incidencia', models.TextField(help_text='Descripción detallada de la incidencia')),
                ('acciones_tomadas', models.TextField(blank=True, help_text='Acciones correctivas realizadas')),
                ('causa_raiz', models.TextField(blank=True, help_text='Análisis de causa raíz (opcional)')),
                ('estado', models.CharField(choices=[('abierta', 'Abierta'), ('en_revision', 'En Revisión'), ('cerrada', 'Cerrada'), ('reincidente', 'Reincidente')], default='abierta', help_text='Estado actual de la incidencia', max_length=15)),
                ('es_reincidencia', models.BooleanField(default=False, help_text='¿Es una reincidencia de una incidencia anterior?')),
                ('año', models.IntegerField(editable=False, help_text='Año de la fecha de detección')),
                ('mes', models.IntegerField(editable=False, help_text='Mes de la fecha de detección (1-12)')),
                ('semana', models.IntegerField(editable=False, help_text='Semana del año (1-53)')),
                ('trimestre', models.IntegerField(editable=False, help_text='Trimestre del año (1-4)')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Última actualización del registro')),
                ('fecha_cierre', models.DateTimeField(blank=True, help_text='Fecha de cierre de la incidencia', null=True)),
                ('componente_afectado', models.ForeignKey(blank=True, help_text='Componente específico con fallo', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='incidencias', to='scorecard.componenteequipo')),
                ('incidencia_relacionada', models.ForeignKey(blank=True, help_text='Incidencia original si es reincidencia', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reincidencias', to='scorecard.incidencia')),
                ('inspector_calidad', models.ForeignKey(help_text='Inspector que detectó la incidencia', on_delete=django.db.models.deletion.PROTECT, related_name='incidencias_inspector', to='inventario.empleado')),
                ('sucursal', models.ForeignKey(help_text='Sucursal donde ocurrió la incidencia', on_delete=django.db.models.deletion.PROTECT, related_name='incidencias', to='inventario.sucursal')),
                ('tecnico_responsable', models.ForeignKey(help_text='Técnico responsable del servicio', on_delete=django.db.models.deletion.PROTECT, related_name='incidencias_tecnico', to='inventario.empleado')),
                ('tipo_incidencia', models.ForeignKey(help_text='Tipo de incidencia', on_delete=django.db.models.deletion.PROTECT, related_name='incidencias', to='scorecard.categoriaincidencia')),
            ],
            options={
                'verbose_name': 'Incidencia',
                'verbose_name_plural': 'Incidencias',
                'ordering': ['-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='EvidenciaIncidencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagen', models.ImageField(help_text='Imagen de evidencia (JPG, PNG, GIF)', upload_to='scorecard/evidencias/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])])),
                ('descripcion', models.CharField(blank=True, help_text='Descripción breve de la evidencia', max_length=200)),
                ('fecha_subida', models.DateTimeField(auto_now_add=True, help_text='Fecha de subida de la imagen')),
                ('subido_por', models.ForeignKey(help_text='Empleado que subió la evidencia', on_delete=django.db.models.deletion.PROTECT, related_name='evidencias_subidas', to='inventario.empleado')),
                ('incidencia', models.ForeignKey(help_text='Incidencia a la que pertenece esta evidencia', on_delete=django.db.models.deletion.CASCADE, related_name='evidencias', to='scorecard.incidencia')),
            ],
            options={
                'verbose_name': 'Evidencia',
                'verbose_name_plural': 'Evidencias',
                'ordering': ['fecha_subida'],
            },
        ),
        migrations.AddIndex(
            model_name='incidencia',
            index=models.Index(fields=['-fecha_registro'], name='scorecard_i_fecha_r_0d637c_idx'),
        ),
        migrations.AddIndex(
            model_name='incidencia',
            index=models.Index(fields=['folio'], name='scorecard_i_folio_42912e_idx'),
        ),
        migrations.AddIndex(
            model_name='incidencia',
            index=models.Index(fields=['numero_serie'], name='scorecard_i_numero__02e4b5_idx'),
        ),
        migrations.AddIndex(
            model_name='incidencia',
            index=models.Index(fields=['tecnico_responsable'], name='scorecard_i_tecnico_9e872f_idx'),
        ),
        migrations.AddIndex(
            model_name='incidencia',
            index=models.Index(fields=['año', 'mes'], name='scorecard_i_año_3507f6_idx'),
        ),
    ]
