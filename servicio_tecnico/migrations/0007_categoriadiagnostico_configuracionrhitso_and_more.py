# Generated by Django 5.2.5 on 2025-10-10 06:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventario', '0013_empleado_foto_perfil'),
        ('servicio_tecnico', '0006_remove_ordenservicio_monto_abono_previo_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaDiagnostico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text="Nombre de la categoría (ej: 'Reballing', 'Soldadura SMD')", max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción técnica de la categoría')),
                ('requiere_rhitso', models.BooleanField(default=True, help_text='¿Requiere envío a RHITSO?')),
                ('tiempo_estimado_dias', models.IntegerField(default=7, help_text='Tiempo estimado de reparación en días', validators=[django.core.validators.MinValueValidator(1)])),
                ('complejidad_tipica', models.CharField(choices=[('BAJA', 'Baja - Reparación simple'), ('MEDIA', 'Media - Complejidad moderada'), ('ALTA', 'Alta - Requiere experiencia especializada'), ('CRITICA', 'Crítica - Máxima complejidad técnica')], default='MEDIA', help_text='Complejidad típica de esta categoría', max_length=10)),
                ('activo', models.BooleanField(default=True, help_text='¿Categoría activa?')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Categoría de Diagnóstico',
                'verbose_name_plural': 'Categorías de Diagnóstico',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionRHITSO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clave', models.CharField(help_text="Clave de configuración (ej: 'tiempo_maximo_alerta')", max_length=100, unique=True)),
                ('valor', models.TextField(blank=True, help_text='Valor de la configuración')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción de qué controla esta configuración')),
                ('tipo', models.CharField(choices=[('STRING', 'Texto'), ('INTEGER', 'Número Entero'), ('BOOLEAN', 'Booleano (Sí/No)'), ('JSON', 'JSON - Datos estructurados')], default='STRING', help_text='Tipo de dato del valor', max_length=10)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Última actualización')),
            ],
            options={
                'verbose_name': 'Configuración RHITSO',
                'verbose_name_plural': 'Configuraciones RHITSO',
            },
        ),
        migrations.CreateModel(
            name='EstadoRHITSO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(help_text="Nombre del estado (ej: 'EN DIAGNOSTICO', 'ESPERANDO PIEZAS')", max_length=100, unique=True)),
                ('owner', models.CharField(choices=[('SIC', 'SIC - Sistema de Información del Cliente'), ('RHITSO', 'RHITSO - Centro de Reparación Especializada'), ('CLIENTE', 'Cliente - Usuario Final'), ('COMPRAS', 'Compras - Departamento de Adquisiciones'), ('CERRADO', 'Cerrado - Proceso Finalizado')], help_text='Responsable del estado actual', max_length=20)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada del estado')),
                ('color', models.CharField(default='secondary', help_text='Color para badges Bootstrap: info, warning, success, danger, primary, secondary, dark', max_length=20)),
                ('orden', models.IntegerField(default=0, help_text='Orden de aparición (1-32)')),
                ('activo', models.BooleanField(default=True, help_text='¿Estado activo y disponible para usar?')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del registro')),
            ],
            options={
                'verbose_name': 'Estado RHITSO',
                'verbose_name_plural': 'Estados RHITSO',
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='TipoIncidenciaRHITSO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del tipo de incidencia', max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción del tipo de incidencia')),
                ('gravedad', models.CharField(choices=[('BAJA', 'Baja - Sin impacto significativo'), ('MEDIA', 'Media - Impacto moderado'), ('ALTA', 'Alta - Impacto considerable'), ('CRITICA', 'Crítica - Requiere atención inmediata')], default='MEDIA', help_text='Gravedad típica de este tipo de incidencia', max_length=10)),
                ('color', models.CharField(default='warning', help_text='Color para badges: info, warning, success, danger', max_length=20)),
                ('requiere_accion_inmediata', models.BooleanField(default=False, help_text='¿Requiere acción inmediata al registrarse?')),
                ('activo', models.BooleanField(default=True, help_text='¿Tipo de incidencia activo?')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tipo de Incidencia RHITSO',
                'verbose_name_plural': 'Tipos de Incidencias RHITSO',
                'ordering': ['nombre'],
            },
        ),
        migrations.AddField(
            model_name='ordenservicio',
            name='complejidad_estimada',
            field=models.CharField(blank=True, choices=[('BAJA', 'Baja - Reparación simple'), ('MEDIA', 'Media - Complejidad moderada'), ('ALTA', 'Alta - Requiere experiencia especializada'), ('CRITICA', 'Crítica - Máxima complejidad técnica')], default='MEDIA', help_text='Complejidad estimada de la reparación', max_length=10),
        ),
        migrations.AddField(
            model_name='ordenservicio',
            name='estado_rhitso',
            field=models.CharField(blank=True, help_text='Estado actual en el proceso RHITSO', max_length=100),
        ),
        migrations.AddField(
            model_name='ordenservicio',
            name='fecha_diagnostico_sic',
            field=models.DateTimeField(blank=True, help_text='Fecha del diagnóstico realizado en SIC', null=True),
        ),
        migrations.AddField(
            model_name='ordenservicio',
            name='fecha_envio_rhitso',
            field=models.DateTimeField(blank=True, help_text='Fecha de envío del equipo a RHITSO', null=True),
        ),
        migrations.AddField(
            model_name='ordenservicio',
            name='fecha_recepcion_rhitso',
            field=models.DateTimeField(blank=True, help_text='Fecha de recepción del equipo desde RHITSO', null=True),
        ),
        migrations.AddField(
            model_name='ordenservicio',
            name='tecnico_diagnostico',
            field=models.ForeignKey(blank=True, help_text='Técnico que realizó el diagnóstico SIC', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='diagnosticos_realizados', to='inventario.empleado'),
        ),
        migrations.AlterField(
            model_name='imagenorden',
            name='tipo',
            field=models.CharField(choices=[('ingreso', 'Ingreso - Estado Inicial'), ('diagnostico', 'Durante Diagnóstico'), ('reparacion', 'Durante Reparación'), ('egreso', 'Egreso - Estado Final'), ('autorizacion', 'Autorización/Pass - RHITSO')], help_text='Tipo de imagen (ingreso, egreso, diagnóstico, etc.)', max_length=15),
        ),
        migrations.CreateModel(
            name='SeguimientoRHITSO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado_anterior', models.CharField(blank=True, help_text='Estado anterior (para referencia)', max_length=100)),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones sobre el cambio de estado')),
                ('fecha_actualizacion', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora del cambio')),
                ('tiempo_en_estado_anterior', models.IntegerField(blank=True, help_text='Días que estuvo en el estado anterior', null=True)),
                ('notificado_cliente', models.BooleanField(default=False, help_text='¿Se notificó al cliente de este cambio?')),
                ('estado', models.ForeignKey(help_text='Estado RHITSO al que cambió', on_delete=django.db.models.deletion.PROTECT, to='servicio_tecnico.estadorhitso')),
                ('orden', models.ForeignKey(help_text='Orden de servicio asociada', on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos_rhitso', to='servicio_tecnico.ordenservicio')),
                ('usuario_actualizacion', models.ForeignKey(blank=True, help_text='Usuario que realizó el cambio (null si es sistema)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.empleado')),
            ],
            options={
                'verbose_name': 'Seguimiento RHITSO',
                'verbose_name_plural': 'Seguimientos RHITSO',
                'ordering': ['-fecha_actualizacion'],
                'indexes': [models.Index(fields=['orden', '-fecha_actualizacion'], name='servicio_te_orden_i_d1dd58_idx'), models.Index(fields=['estado'], name='servicio_te_estado__e21438_idx'), models.Index(fields=['-fecha_actualizacion'], name='servicio_te_fecha_a_4b027b_idx')],
            },
        ),
        migrations.CreateModel(
            name='IncidenciaRHITSO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Título breve de la incidencia', max_length=255)),
                ('descripcion_detallada', models.TextField(help_text='Descripción completa del problema')),
                ('fecha_ocurrencia', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha y hora en que ocurrió la incidencia')),
                ('estado', models.CharField(choices=[('ABIERTA', 'Abierta - Sin resolver'), ('EN_REVISION', 'En Revisión - Siendo analizada'), ('RESUELTA', 'Resuelta - Acción completada'), ('CERRADA', 'Cerrada - Finalizada')], default='ABIERTA', help_text='Estado actual de la incidencia', max_length=15)),
                ('impacto_cliente', models.CharField(choices=[('NINGUNO', 'Ninguno - Sin impacto'), ('BAJO', 'Bajo - Impacto mínimo'), ('MEDIO', 'Medio - Impacto moderado'), ('ALTO', 'Alto - Impacto significativo')], default='BAJO', help_text='Impacto de la incidencia hacia el cliente', max_length=10)),
                ('accion_tomada', models.TextField(blank=True, help_text='Descripción de la acción correctiva tomada')),
                ('fecha_resolucion', models.DateTimeField(blank=True, help_text='Fecha y hora de resolución', null=True)),
                ('costo_adicional', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costo adicional generado por la incidencia', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('requiere_seguimiento', models.BooleanField(default=True, help_text='¿Requiere seguimiento continuo?')),
                ('prioridad', models.CharField(choices=[('BAJA', 'Baja - Puede esperar'), ('MEDIA', 'Media - Atención normal'), ('ALTA', 'Alta - Requiere prioridad'), ('URGENTE', 'Urgente - Atención inmediata')], default='MEDIA', help_text='Prioridad de atención', max_length=10)),
                ('orden', models.ForeignKey(help_text='Orden de servicio afectada', on_delete=django.db.models.deletion.CASCADE, related_name='incidencias_rhitso', to='servicio_tecnico.ordenservicio')),
                ('resuelto_por', models.ForeignKey(blank=True, help_text='Empleado que resolvió la incidencia', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidencias_resueltas', to='inventario.empleado')),
                ('usuario_registro', models.ForeignKey(help_text='Empleado que registró la incidencia', on_delete=django.db.models.deletion.PROTECT, related_name='incidencias_registradas', to='inventario.empleado')),
                ('tipo_incidencia', models.ForeignKey(help_text='Tipo de incidencia', on_delete=django.db.models.deletion.PROTECT, to='servicio_tecnico.tipoincidenciarhitso')),
            ],
            options={
                'verbose_name': 'Incidencia RHITSO',
                'verbose_name_plural': 'Incidencias RHITSO',
                'ordering': ['-fecha_ocurrencia'],
                'indexes': [models.Index(fields=['orden', '-fecha_ocurrencia'], name='servicio_te_orden_i_64e14a_idx'), models.Index(fields=['tipo_incidencia'], name='servicio_te_tipo_in_e6b16f_idx'), models.Index(fields=['estado'], name='servicio_te_estado_ee54ac_idx')],
            },
        ),
    ]
