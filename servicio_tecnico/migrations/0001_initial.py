# Generated by Django 5.2.5 on 2025-10-07 03:14

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventario', '0013_empleado_foto_perfil'),
        ('scorecard', '0008_remove_old_servicio_field'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrdenServicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_orden_interno', models.CharField(editable=False, help_text='Número de orden auto-generado (ORD-2025-0001)', max_length=20, unique=True)),
                ('fecha_ingreso', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha y hora de ingreso al centro de servicio')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Última actualización del registro')),
                ('fecha_finalizacion', models.DateTimeField(blank=True, help_text='Fecha en que se finalizó la reparación', null=True)),
                ('fecha_entrega', models.DateTimeField(blank=True, help_text='Fecha en que se entregó al cliente', null=True)),
                ('estado', models.CharField(choices=[('espera', 'En Espera'), ('recepcion', 'En Recepción'), ('diagnostico', 'En Diagnóstico'), ('cotizacion', 'Esperando Aprobación Cliente'), ('rechazada', 'Cotización Rechazada'), ('esperando_piezas', 'Esperando Llegada de Piezas'), ('reparacion', 'En Reparación'), ('control_calidad', 'Control de Calidad'), ('finalizado', 'Finalizado - Listo para Entrega'), ('entregado', 'Entregado al Cliente'), ('cancelado', 'Cancelado')], default='espera', help_text='Estado actual de la orden', max_length=20)),
                ('es_reingreso', models.BooleanField(default=False, help_text='¿Es un reingreso de un equipo ya reparado?')),
                ('es_candidato_rhitso', models.BooleanField(default=False, help_text='¿Requiere reparación especializada (soldadura, reballing)?')),
                ('motivo_rhitso', models.CharField(blank=True, choices=[('reballing', 'Requiere Reballing de GPU/CPU'), ('soldadura', 'Soldadura especializada en placa'), ('componente_smd', 'Reemplazo de componentes SMD'), ('corrosion', 'Corrosión severa en placa'), ('cortocircuito', 'Cortocircuito en circuitería'), ('diagnostico_profundo', 'Requiere diagnóstico más profundo'), ('otro', 'Otro motivo especializado')], help_text='Motivo por el cual se considera para RHITSO', max_length=30)),
                ('descripcion_rhitso', models.TextField(blank=True, help_text='Descripción detallada del motivo RHITSO')),
                ('requiere_factura', models.BooleanField(default=False, help_text='¿El cliente requiere factura?')),
                ('factura_emitida', models.BooleanField(default=False, help_text='¿La factura ya fue emitida?')),
                ('motivo_no_factura', models.TextField(blank=True, help_text='Motivo por el cual no se ha emitido la factura')),
                ('año', models.IntegerField(editable=False, help_text='Año de ingreso')),
                ('mes', models.IntegerField(editable=False, help_text='Mes de ingreso (1-12)')),
                ('semana', models.IntegerField(editable=False, help_text='Semana del año (1-53)')),
                ('incidencia_scorecard', models.ForeignKey(blank=True, help_text='Incidencia de ScoreCard generada si es reingreso', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordenes_relacionadas', to='scorecard.incidencia')),
                ('orden_original', models.ForeignKey(blank=True, help_text='Orden original si este es un reingreso', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reingresos', to='servicio_tecnico.ordenservicio')),
                ('responsable_seguimiento', models.ForeignKey(help_text='Empleado responsable del seguimiento de la orden', on_delete=django.db.models.deletion.PROTECT, related_name='ordenes_responsable', to='inventario.empleado')),
                ('sucursal', models.ForeignKey(help_text='Sucursal donde se registra la orden', on_delete=django.db.models.deletion.PROTECT, related_name='ordenes_servicio', to='inventario.sucursal')),
                ('tecnico_asignado_actual', models.ForeignKey(help_text='Técnico actualmente asignado a la orden', on_delete=django.db.models.deletion.PROTECT, related_name='ordenes_tecnico', to='inventario.empleado')),
            ],
            options={
                'verbose_name': 'Orden de Servicio',
                'verbose_name_plural': 'Órdenes de Servicio',
                'ordering': ['-fecha_ingreso'],
            },
        ),
        migrations.CreateModel(
            name='Cotizacion',
            fields=[
                ('orden', models.OneToOneField(help_text='Orden de servicio a la que pertenece esta cotización', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='cotizacion', serialize=False, to='servicio_tecnico.ordenservicio')),
                ('fecha_envio', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha en que se envió la cotización al cliente')),
                ('fecha_respuesta', models.DateTimeField(blank=True, help_text='Fecha en que el cliente respondió', null=True)),
                ('usuario_acepto', models.BooleanField(blank=True, help_text='¿El usuario aceptó la cotización? (Null = Sin respuesta)', null=True)),
                ('motivo_rechazo', models.CharField(blank=True, choices=[('costo_alto', 'Costo muy elevado'), ('muchas_piezas', 'Demasiadas piezas a cambiar'), ('tiempo_largo', 'Tiempo de reparación muy largo'), ('falta_justificacion', 'Falta de justificación en diagnóstico'), ('no_vale_pena', 'No vale la pena reparar'), ('otro', 'Otro motivo')], help_text='Motivo por el cual rechazó la cotización', max_length=30)),
                ('detalle_rechazo', models.TextField(blank=True, help_text='Detalle adicional del motivo de rechazo')),
                ('costo_mano_obra', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costo de mano de obra', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
            ],
            options={
                'verbose_name': 'Cotización',
                'verbose_name_plural': 'Cotizaciones',
            },
        ),
        migrations.CreateModel(
            name='DetalleEquipo',
            fields=[
                ('orden', models.OneToOneField(help_text='Orden de servicio a la que pertenece este detalle', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='detalle_equipo', serialize=False, to='servicio_tecnico.ordenservicio')),
                ('tipo_equipo', models.CharField(choices=[('pc', 'PC'), ('laptop', 'Laptop'), ('aio', 'AIO (All-in-One)')], help_text='Tipo de equipo (PC, Laptop, AIO)', max_length=10)),
                ('marca', models.CharField(help_text='Marca del equipo', max_length=50)),
                ('modelo', models.CharField(help_text='Modelo específico del equipo', max_length=100)),
                ('numero_serie', models.CharField(db_index=True, help_text='Número de serie del equipo (Service Tag)', max_length=100)),
                ('gama', models.CharField(choices=[('alta', 'Gama Alta'), ('media', 'Gama Media'), ('baja', 'Gama Baja')], help_text='Gama del equipo (calculada automáticamente)', max_length=10)),
                ('tiene_cargador', models.BooleanField(default=False, help_text='¿El equipo incluye cargador?')),
                ('numero_serie_cargador', models.CharField(blank=True, help_text='Número de serie del cargador (si aplica)', max_length=100)),
                ('equipo_enciende', models.BooleanField(default=True, help_text='¿El equipo enciende al momento del ingreso?')),
                ('falla_principal', models.TextField(help_text='Descripción de la falla principal reportada por el cliente')),
                ('diagnostico_sic', models.TextField(blank=True, help_text='Diagnóstico técnico del equipo (SIC - Sistema de Información del Cliente)')),
                ('fecha_inicio_diagnostico', models.DateField(blank=True, help_text='Fecha en que inició el diagnóstico', null=True)),
                ('fecha_fin_diagnostico', models.DateField(blank=True, help_text='Fecha en que finalizó el diagnóstico', null=True)),
                ('fecha_inicio_reparacion', models.DateField(blank=True, help_text='Fecha en que inició la reparación', null=True)),
                ('fecha_fin_reparacion', models.DateField(blank=True, help_text='Fecha en que finalizó la reparación', null=True)),
            ],
            options={
                'verbose_name': 'Detalle de Equipo',
                'verbose_name_plural': 'Detalles de Equipos',
            },
        ),
        migrations.CreateModel(
            name='VentaMostrador',
            fields=[
                ('orden', models.OneToOneField(help_text='Orden de servicio a la que pertenece esta venta', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='venta_mostrador', serialize=False, to='servicio_tecnico.ordenservicio')),
                ('folio_venta', models.CharField(help_text='Folio de venta mostrador (VM-2025-0001)', max_length=20, unique=True)),
                ('fecha_venta', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha de la venta')),
                ('paquete', models.CharField(choices=[('oro', 'Paquete Oro'), ('plata', 'Paquete Plata'), ('bronce', 'Paquete Bronce'), ('ninguno', 'Sin Paquete')], default='ninguno', help_text='Paquete de servicio adicional', max_length=10)),
                ('incluye_cambio_pieza', models.BooleanField(default=False, help_text='¿Incluye cambio de pieza sin diagnóstico?')),
                ('costo_cambio_pieza', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costo del servicio de cambio de pieza', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('incluye_limpieza', models.BooleanField(default=False, help_text='¿Incluye servicio de limpieza y mantenimiento?')),
                ('costo_limpieza', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costo del servicio de limpieza', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('incluye_kit_limpieza', models.BooleanField(default=False, help_text='¿Se vendió kit de limpieza?')),
                ('costo_kit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costo del kit de limpieza', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('incluye_reinstalacion_so', models.BooleanField(default=False, help_text='¿Incluye reinstalación de sistema operativo?')),
                ('costo_reinstalacion', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costo de reinstalación de SO', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('notas_adicionales', models.TextField(blank=True, help_text='Notas adicionales sobre la venta')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Venta Mostrador',
                'verbose_name_plural': 'Ventas Mostrador',
            },
        ),
        migrations.CreateModel(
            name='HistorialOrden',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_evento', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha y hora del evento')),
                ('tipo_evento', models.CharField(choices=[('creacion', 'Creación de Orden'), ('cambio_estado', 'Cambio de Estado'), ('cambio_tecnico', 'Cambio de Técnico Asignado'), ('comentario', 'Comentario de Usuario'), ('sistema', 'Evento del Sistema'), ('imagen', 'Subida de Imagen'), ('cotizacion', 'Evento de Cotización'), ('pieza', 'Evento de Pieza')], help_text='Tipo de evento registrado', max_length=20)),
                ('estado_anterior', models.CharField(blank=True, help_text='Estado anterior (si aplica)', max_length=20)),
                ('estado_nuevo', models.CharField(blank=True, help_text='Estado nuevo (si aplica)', max_length=20)),
                ('comentario', models.TextField(help_text='Descripción detallada del evento o comentario')),
                ('es_sistema', models.BooleanField(default=False, help_text='¿Es un evento generado automáticamente por el sistema?')),
                ('orden', models.ForeignKey(help_text='Orden a la que pertenece este evento', on_delete=django.db.models.deletion.CASCADE, related_name='historial', to='servicio_tecnico.ordenservicio')),
                ('tecnico_anterior', models.ForeignKey(blank=True, help_text='Técnico anterior (si aplica)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historial_tecnico_anterior', to='inventario.empleado')),
                ('tecnico_nuevo', models.ForeignKey(blank=True, help_text='Técnico nuevo (si aplica)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historial_tecnico_nuevo', to='inventario.empleado')),
                ('usuario', models.ForeignKey(blank=True, help_text='Usuario que realizó la acción (null si es del sistema)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historial_creado', to='inventario.empleado')),
            ],
            options={
                'verbose_name': 'Evento de Historial',
                'verbose_name_plural': 'Historial de Órdenes',
                'ordering': ['-fecha_evento'],
            },
        ),
        migrations.CreateModel(
            name='ImagenOrden',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('ingreso', 'Ingreso - Estado Inicial'), ('diagnostico', 'Durante Diagnóstico'), ('reparacion', 'Durante Reparación'), ('egreso', 'Egreso - Estado Final'), ('problema', 'Evidencia de Problema'), ('otro', 'Otro')], help_text='Tipo de imagen (ingreso, egreso, diagnóstico, etc.)', max_length=15)),
                ('imagen', models.ImageField(help_text='Archivo de imagen (JPG, PNG, GIF)', upload_to='servicio_tecnico/imagenes/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])])),
                ('descripcion', models.CharField(blank=True, help_text='Descripción breve de la imagen', max_length=200)),
                ('fecha_subida', models.DateTimeField(auto_now_add=True, help_text='Fecha en que se subió la imagen')),
                ('orden', models.ForeignKey(help_text='Orden a la que pertenece esta imagen', on_delete=django.db.models.deletion.CASCADE, related_name='imagenes', to='servicio_tecnico.ordenservicio')),
                ('subido_por', models.ForeignKey(help_text='Empleado que subió la imagen', on_delete=django.db.models.deletion.PROTECT, related_name='imagenes_subidas_servicio', to='inventario.empleado')),
            ],
            options={
                'verbose_name': 'Imagen de Orden',
                'verbose_name_plural': 'Imágenes de Órdenes',
                'ordering': ['fecha_subida'],
            },
        ),
        migrations.CreateModel(
            name='ReferenciaGamaEquipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(help_text='Marca del equipo', max_length=50)),
                ('modelo_base', models.CharField(help_text='Modelo base o familia (ej: ThinkPad, Inspiron, Pavilion)', max_length=100)),
                ('gama', models.CharField(choices=[('alta', 'Gama Alta'), ('media', 'Gama Media'), ('baja', 'Gama Baja')], help_text='Gama del equipo', max_length=10)),
                ('rango_costo_min', models.DecimalField(decimal_places=2, help_text='Costo mínimo aproximado (para referencia)', max_digits=10)),
                ('rango_costo_max', models.DecimalField(decimal_places=2, help_text='Costo máximo aproximado (para referencia)', max_digits=10)),
                ('activo', models.BooleanField(default=True, help_text='Referencia activa para cálculo automático')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Referencia de Gama',
                'verbose_name_plural': 'Referencias de Gamas de Equipos',
                'ordering': ['marca', 'modelo_base'],
                'unique_together': {('marca', 'modelo_base')},
            },
        ),
        migrations.CreateModel(
            name='SeguimientoPieza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proveedor', models.CharField(help_text='Nombre del proveedor', max_length=100)),
                ('descripcion_piezas', models.TextField(help_text='Descripción de las piezas pedidas en este seguimiento')),
                ('numero_pedido', models.CharField(blank=True, help_text='Número de pedido o tracking del proveedor', max_length=100)),
                ('fecha_pedido', models.DateField(default=django.utils.timezone.now, help_text='Fecha en que se realizó el pedido')),
                ('fecha_entrega_estimada', models.DateField(help_text='Fecha estimada de llegada')),
                ('fecha_entrega_real', models.DateField(blank=True, help_text='Fecha real en que llegó la pieza', null=True)),
                ('estado', models.CharField(choices=[('pedido', 'Pedido Realizado'), ('confirmado', 'Pedido Confirmado'), ('transito', 'En Tránsito'), ('retrasado', 'Retrasado'), ('recibido', 'Recibido en Sucursal')], default='pedido', help_text='Estado actual del pedido', max_length=15)),
                ('notas_seguimiento', models.TextField(blank=True, help_text='Notas y actualizaciones del seguimiento')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('cotizacion', models.ForeignKey(help_text='Cotización a la que pertenece este seguimiento', on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos_piezas', to='servicio_tecnico.cotizacion')),
            ],
            options={
                'verbose_name': 'Seguimiento de Pieza',
                'verbose_name_plural': 'Seguimientos de Piezas',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='PiezaCotizada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion_adicional', models.TextField(blank=True, help_text='Descripción adicional o específica de la pieza')),
                ('sugerida_por_tecnico', models.BooleanField(default=True, help_text='¿Fue sugerida por el técnico en el diagnóstico?')),
                ('es_necesaria', models.BooleanField(default=True, help_text='¿Es necesaria para el funcionamiento? (False = Mejora estética/rendimiento)')),
                ('cantidad', models.PositiveIntegerField(default=1, help_text='Cantidad de piezas', validators=[django.core.validators.MinValueValidator(1)])),
                ('costo_unitario', models.DecimalField(decimal_places=2, help_text='Costo unitario de la pieza', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('aceptada_por_cliente', models.BooleanField(blank=True, help_text='¿El cliente aceptó cambiar esta pieza? (Null = Sin respuesta)', null=True)),
                ('motivo_rechazo_pieza', models.TextField(blank=True, help_text='Motivo por el cual rechazó esta pieza específica')),
                ('orden_prioridad', models.PositiveIntegerField(default=1, help_text='Orden de prioridad (1 = más importante)')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('componente', models.ForeignKey(help_text='Componente del catálogo (reutiliza de ScoreCard)', on_delete=django.db.models.deletion.PROTECT, related_name='piezas_cotizadas', to='scorecard.componenteequipo')),
                ('cotizacion', models.ForeignKey(help_text='Cotización a la que pertenece esta pieza', on_delete=django.db.models.deletion.CASCADE, related_name='piezas_cotizadas', to='servicio_tecnico.cotizacion')),
            ],
            options={
                'verbose_name': 'Pieza Cotizada',
                'verbose_name_plural': 'Piezas Cotizadas',
                'ordering': ['orden_prioridad', 'fecha_creacion'],
            },
        ),
        migrations.AddIndex(
            model_name='ordenservicio',
            index=models.Index(fields=['-fecha_ingreso'], name='servicio_te_fecha_i_adf68d_idx'),
        ),
        migrations.AddIndex(
            model_name='ordenservicio',
            index=models.Index(fields=['numero_orden_interno'], name='servicio_te_numero__22a791_idx'),
        ),
        migrations.AddIndex(
            model_name='ordenservicio',
            index=models.Index(fields=['estado'], name='servicio_te_estado_a36f78_idx'),
        ),
        migrations.AddIndex(
            model_name='ordenservicio',
            index=models.Index(fields=['sucursal'], name='servicio_te_sucursa_f25083_idx'),
        ),
        migrations.AddIndex(
            model_name='ordenservicio',
            index=models.Index(fields=['año', 'mes'], name='servicio_te_año_454f4d_idx'),
        ),
        migrations.AddIndex(
            model_name='historialorden',
            index=models.Index(fields=['-fecha_evento'], name='servicio_te_fecha_e_65829e_idx'),
        ),
        migrations.AddIndex(
            model_name='historialorden',
            index=models.Index(fields=['orden', '-fecha_evento'], name='servicio_te_orden_i_35de6b_idx'),
        ),
    ]
